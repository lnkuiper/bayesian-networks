@book{clean,
    title       = "Functional programming in Clean",
    author      = "Pieter Koopman and Rinus Plasmeijer and Peter Achten and
                    Sjaak Smetsers",
    year        = "2002"
}

@inproceedings{itasks,
    author      = {Plasmeijer, Rinus and Achten, Peter and Koopman, Pieter},
    title       = {{iTasks}: {E}xecutable {S}pecifications of {I}nteractive {W}ork {F}low {S}ystems for the {W}eb},
    booktitle   = {{P}roceedings of the 12th {ACM SIGPLAN} {I}nternational {C}onference on {F}unctional {P}rogramming ({ICFP} 2007)},
    address     = {{F}reiburg, {G}ermany},
    year        = 2007,
    month       = {Oct 1--3},
    publisher   = {ACM},
    isbn        = "978-1-59593-815-2",
    pages       = {141-152}
}

@MISC{impfun,
    author = {Simon L. Peyton Jones and Philip Wadler},
    title = {Imperative Functional Programming},
    year = {1993}
}

@inproceedings{do,
 author = {Erk\"{o}k, Levent and Launchbury, John},
 title = {A Recursive Do for Haskell},
 booktitle = {Proceedings of the 2002 ACM SIGPLAN Workshop on Haskell},
 series = {Haskell '02},
 year = {2002},
 isbn = {1-58113-605-6},
 location = {Pittsburgh, Pennsylvania},
 pages = {29--37},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/581690.581693},
 doi = {10.1145/581690.581693},
 acmid = {581693},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Haskell, do-notation, monads, value recursion},
}

@electronic{leaflet,
  author        = "Vladimir Agafonkin.",
  title         = "Leafletjs",
  url           = "http://leafletjs.com",
  year          = "2017"
}

@article{prototyping,
 author = {Richards, Gregor and Lebresne, Sylvain and Burg, Brian and Vitek, Jan},
 title = {An Analysis of the Dynamic Behavior of JavaScript Programs},
 journal = {SIGPLAN Not.},
 issue_date = {June 2010},
 volume = {45},
 number = {6},
 month = jun,
 year = {2010},
 issn = {0362-1340},
 pages = {1--12},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1809028.1806598},
 doi = {10.1145/1809028.1806598},
 acmid = {1806598},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dynamic behavior, dynamic metrics, execution tracing, javascript, program analysis},
}

@InProceedings{typescript,
author="Bierman, Gavin
and Abadi, Mart{\'i}n
and Torgersen, Mads",
editor="Jones, Richard",
title="Understanding TypeScript",
booktitle="ECOOP 2014 -- Object-Oriented Programming",
year="2014",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="257--281",
abstract="TypeScript is an extension of JavaScript intended to enable easier development of large-scale JavaScript applications. While every JavaScript program is a TypeScript program, TypeScript offers a module system, classes, interfaces, and a rich gradual type system. The intention is that TypeScript provides a smooth transition for JavaScript programmers---well-established JavaScript programming idioms are supported without any major rewriting or annotations. One interesting consequence is that the TypeScript type system is not statically sound by design. The goal of this paper is to capture the essence of TypeScript by giving a precise definition of this type system on a core set of constructs of the language. Our main contribution, beyond the familiar advantages of a robust, mathematical formalization, is a refactoring into a safe inner fragment and an additional layer of unsafe rules.",
isbn="978-3-662-44202-9"
}

@InProceedings{monads,
author="Wadler, Philip",
editor="Jeuring, Johan
and Meijer, Erik",
title="Monads for functional programming",
booktitle="Advanced Functional Programming",
year="1995",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="24--52",
abstract="The use of monads to structure functional programs is described. Monads provide a convenient framework for simulating effects found in other languages, such as global state, exception handling, output, or non-determinism. Three case studies are looked at in detail: how monads ease the modification of a simple evaluator; how monads act as the basis of a datatype of arrays subject to in-place update; and how monads can be used to build parsers.",
isbn="978-3-540-49270-2"
}

@book{javascript,
    title       = "Ecmascript language specification",
    year        = "2017",
    note        = "Javascript and Ecmascript are the same language"
}

@inproceedings{funio,
 author = {Achten, Peter and Groningen, John H. G. van and Plasmeijer, Rinus},
 title = {High Level Specification of I/O in Functional Languages},
 booktitle = {Proceedings of the 1992 Glasgow Workshop on Functional Programming},
 year = {1993},
 isbn = {3-540-19820-2},
 pages = {1--17},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=647557.729907},
 acmid = {729907},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
}

@inproceedings{intimpfun,
 author = {Gifford, David K. and Lucassen, John M.},
 title = {Integrating Functional and Imperative Programming},
 booktitle = {Proceedings of the 1986 ACM Conference on LISP and Functional Programming},
 series = {LFP '86},
 year = {1986},
 isbn = {0-89791-200-4},
 location = {Cambridge, Massachusetts, USA},
 pages = {28--38},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/319838.319848},
 doi = {10.1145/319838.319848},
 acmid = {319848},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@electronic{leafleticl,
  title         = "Leaflet iTasks wrapper",
  url           =
      "https://gitlab.science.ru.nl/clean-and-itasks/iTasks-SDK/blob/master/Libraries/iTasks/Extensions/GIS/Leaflet.icl"
}

@electronic{haskellmonadtransformers,
  title         = "Haskel Monad Transformer documentation",
  url           = "https://en.wikibooks.org/wiki/Haskell/Monad_transformers"
}
